{"version":3,"file":"monitor.me.js","sources":["../src/common.ts","../src/utils/global.ts","../src/utils/helpers.ts","../src/utils/queue.ts","../src/core/replaceModule.ts","../src/core/addModule.ts","../src/core/handleEvents.ts","../src/core/transformData.ts","../src/core/transportData.ts","../src/config.ts","../src/index.ts","../src/module.ts"],"sourcesContent":["export enum EVENTTYPES {\n  XHR = 'xhr',\n  FETCH = 'fetch',\n  CONSOLE = 'console',\n  DOM = 'dom',\n  HISTORY = 'history',\n  ERROR = 'error',\n  HASHCHANGE = 'hashchange',\n  UNHANDLEDREJECTION = 'unhandledrejection',\n  VUE = 'Vue'\n}\n\nexport enum ERRORLEVEL {\n  CRITICAL = 1,\n  HIGH = 2,\n  NORMAL = 3,\n  LOW = 4,\n}\n\nexport type EVENTS = keyof typeof EVENTTYPES;\n\nexport type VoidFn = () => void;\n\nexport enum HTTPTYPE {\n  XHR = 'xhr',\n  FETCH = 'fetch',\n}\nexport interface MonitorHttp {\n  type: HTTPTYPE;\n  method?: string;\n  url?: string;\n  sTime?: number;\n  eTime?: number;\n  isSdkUrl?: boolean;\n  reqData?: any;\n  status?: number;\n  statusText?: any;\n  responseText?: any;\n  elapsedTime?: number;\n}\n\nexport enum ERRORTYPES {\n  HTTPERROR = 'http_error',\n  BUSSIONERROR = 'bussion_error',\n  JAVASCRIPT_ERROR = 'javascript_error',\n  RESOURCE_ERROR = 'resource_error',\n  PROMISE_ERROR = 'promise_error',\n}\n","import {MonitorOptions} from '@/types/monitor';\nimport { EVENTTYPES } from '@/common'\n\nexport interface MonitorTypes{\n   silentFlag:{[key in EVENTTYPES]?:boolean}\n}\n\n// 全局变量绑定 __MONITOR__属性\nexport const globalThisMonitor=()=>{\n    _globalThis.__MONITOR__ = _globalThis.__MONITOR__ || ({} as MonitorTypes);\n    return  _globalThis.__MONITOR__;\n}\n// 全局变量\nconst _globalThis =globalThis;\nconst _globalMonitor = globalThisMonitor();\nexport {_globalThis,_globalMonitor};\n\nconst _silentFlag =_globalMonitor.silentFlag = {};\nexport const setSilent=(slientType:EVENTTYPES,bool:boolean):void=>{\n    if(_silentFlag[slientType]) return ;\n    _silentFlag[slientType] = bool;\n}\n\nexport const getSilent=(slientType:EVENTTYPES):boolean=>{\n    return !!_silentFlag[slientType];\n}\n\nexport const setSilentHandler =(opitons:MonitorOptions ={}):void=>{\n    setSilent(EVENTTYPES.XHR, !!opitons.silentXhr)\n    setSilent(EVENTTYPES.FETCH, !!opitons.silentFetch)\n    setSilent(EVENTTYPES.CONSOLE, !!opitons.silentConsole)\n    setSilent(EVENTTYPES.DOM, !!opitons.silentDom)\n    setSilent(EVENTTYPES.HISTORY, !!opitons.silentHistory)\n    setSilent(EVENTTYPES.ERROR, !!opitons.silentError)\n    setSilent(EVENTTYPES.HASHCHANGE, !!opitons.silentHashchange)\n    setSilent(EVENTTYPES.UNHANDLEDREJECTION, !!opitons.silentUnhandledrejection)\n    setSilent(EVENTTYPES.VUE, !!opitons.silentVue)\n}","import { VoidFn } from '@/common';\n\nexport const replaceOld = (\n  source: {\n    [key: string]: any;\n  },\n  name: string,\n  replaceFn: (...args: any[]) => any,\n): void => {\n  if (!(name in source)) return;\n  const original = source[name];\n  const wapper = replaceFn(original);\n  if (typeof wapper === 'function') {\n    source[name] = wapper;\n  }\n};\n\nexport const isString = (str: any): boolean => {\n  return typeof str === 'string';\n};\n\nexport const getTimestamp = (): number => {\n  return Date.now();\n};\n\nexport const on = (\n  target: { addEventListener?: Function },\n  eventName: string,\n  handler: Function,\n  opitons: boolean | unknown = false,\n): void => {\n  target.addEventListener(eventName, handler, opitons);\n};\n\n/**\n *\n * @param data\n *  Object.entries()方法返回一个给定对象自身可枚举属性的键值对数组,其排列与使用 for...in\n * 循环遍历该对象时返回的顺序一致（区别在于 for-in 循环还会枚举原型链中的属性）。\n * @returns\n */\nexport const splitObjToQuery = (data: Record<string, unknown>) => {\n  if (!data) return;\n  return Object.entries(data).reduce((result, [key, value], index) => {\n    if (index !== 0) {\n      result += '&';\n    }\n    result += `${key}=${value}`;\n    return result;\n  }, '');\n};\n\nexport const getLocationHref = () => {\n  if (typeof document === 'undefined' || document.location == null) return '';\n  return document.location.href;\n};\n\n//防抖\nexport const debouce = (fn: VoidFn, delay: number, isFirst?: boolean) => {\n  let timer = null;\n  let isImmediate = isFirst || false;\n  const _debouce = (...args: any[]) => {\n    if (isImmediate) {\n      fn.apply(fn, args);\n      isImmediate = false;\n      return;\n    }\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn.apply(fn, args);\n      timer = null;\n    }, delay);\n  };\n  _debouce.cancel = () => {\n    clearTimeout(timer);\n    timer = null;\n  };\n  return _debouce;\n};\n\n// 节流\nexport const throttle = (fn: Function, warting: number, isFirst?: boolean) => {\n  let isImmediate = isFirst;\n  let exceDate = +new Date();\n  let timer = null;\n  const _throttle = (...args: any[]) => {\n    if (isImmediate) {\n      fn.apply(fn, args);\n      isImmediate = false;\n      exceDate = +new Date();\n    } else {\n      const curDate = +new Date();\n      if (curDate - exceDate >= warting) {\n        fn.apply(fn, args);\n        exceDate = +new Date();\n      } else {\n        timer && clearTimeout(timer);\n        const delay = warting - (+new Date() - exceDate);\n        timer = setTimeout(() => {\n          fn.apply(fn, args);\n          exceDate = +new Date();\n        }, delay);\n      }\n    }\n  };\n  _throttle.cancel = () => {\n    timer = null;\n    clearTimeout(null);\n    exceDate = 0;\n  };\n  return _throttle;\n};\n\nexport const htmlPathAsInfo = (path: any[]) => {\n  console.log(path);\n  const html: HTMLElement = path[0];\n  const { nodeName, baseURI, attributes, outerHTML } = html;\n  return {\n    nodeName,\n    baseURI,\n    attributes,\n    outerHTML,\n  };\n};\n","import { VoidFn } from '@/common';\nexport class Queue {\n  private micro: Promise<void>;\n  private stack: any[] = [];\n  private isFlushing = false;\n  constructor() {\n    this.micro = Promise.resolve();\n  }\n  addFn(handler: VoidFn): void {\n    if (typeof handler !== 'function') return;\n    this.stack.push(handler);\n    if (this.isFlushing) return;\n    this.isFlushing = true;\n    this.micro.then(() => this.flushStack());\n  }\n  flushStack(): void {\n    const temp = this.stack.slice(0);\n    this.stack.length = 0;\n    this.isFlushing = false;\n    for (let i = 0; i < temp.length; i++) {\n      temp[i]();\n    }\n  }\n}\n","import { EVENTTYPES, VoidFn, HTTPTYPE, MonitorHttp } from '@/common';\nimport { cbType, triggerModuleHandler, transportData, throttleTriggerModuleHandler } from 'core';\nimport { _globalThis, isString, getTimestamp, replaceOld, on, getLocationHref } from 'utils';\n\nexport interface MonitorXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  monitor_xhr: MonitorHttp;\n}\n// xhr\nexport const replaceXhr = (): void => {\n  if (!('XMLHttpRequest' in _globalThis)) return;\n  const originalXhrProto = XMLHttpRequest.prototype;\n  replaceOld(originalXhrProto, 'open', (originalOpen: VoidFn): VoidFn => {\n    return function (this: MonitorXMLHttpRequest, ...args: any[]): void {\n      const url = args[1];\n      this.monitor_xhr = {\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        sTime: getTimestamp(),\n        type: HTTPTYPE.XHR,\n      };\n      //  todo 判断是否是监控本身的请求，需要做标记，不发送请求\n      if (this.monitor_xhr.method === 'POST' && transportData.isSdkTransportUrl(url)) {\n        this.monitor_xhr.isSdkUrl = true;\n      }\n      originalOpen.apply(this, args);\n    };\n  });\n  replaceOld(originalXhrProto, 'send', (originalSend: VoidFn): VoidFn => {\n    return function (this: MonitorXMLHttpRequest, ...args: any[]): void {\n      on(this, 'loadend', function (this: MonitorXMLHttpRequest) {\n        if (this.monitor_xhr?.isSdkUrl) return;\n        this.monitor_xhr.reqData = args[0];\n        this.monitor_xhr.eTime = getTimestamp();\n        this.monitor_xhr.status = this.status;\n        this.monitor_xhr.statusText = this.statusText;\n        this.monitor_xhr.responseText = this.responseText;\n        this.monitor_xhr.elapsedTime = this.monitor_xhr.eTime - this.monitor_xhr.sTime;\n\n        triggerModuleHandler(EVENTTYPES.XHR, this.monitor_xhr);\n      });\n      originalSend.apply(this, args);\n    };\n  });\n};\n// fetch\nexport const replaceFetch = (): void => {\n  if (!('fetch' in _globalThis)) return;\n  replaceOld(_globalThis, EVENTTYPES.FETCH, (originalFetch: VoidFn) => {\n    return function (url: string, config: Request): void {\n      const sTime = getTimestamp();\n      originalFetch\n        .apply(_globalThis, [url, config])\n        .then((res: Response) => {\n          console.log(res, '----');\n          const eTime = getTimestamp();\n          const tempRes = res.clone();\n          const handlerData: MonitorHttp = {\n            eTime,\n            sTime,\n            url,\n            method: (config && config.method) || 'GET',\n            type: HTTPTYPE.FETCH,\n            status: tempRes.status,\n            statusText: tempRes.statusText,\n            elapsedTime: eTime - sTime,\n          };\n          tempRes.text().then((data) => {\n            handlerData.responseText = data;\n            triggerModuleHandler(EVENTTYPES.FETCH, handlerData);\n          });\n        })\n        .catch((err: Error) => {\n          const eTime = getTimestamp();\n          const handlerData: MonitorHttp = {\n            eTime,\n            sTime,\n            url,\n            method: (config && config.method) || 'GET',\n            type: HTTPTYPE.FETCH,\n            status: 0,\n            statusText: err.name + err.message,\n            elapsedTime: eTime - sTime,\n          };\n          triggerModuleHandler(EVENTTYPES.FETCH, handlerData);\n          throw err;\n        });\n    };\n  });\n};\n// console\nexport const replaceConsole = (): void => {\n  // if (!('console' in _globalThis)) return;\n  // const types = ['assert', 'log', 'warn', 'debug', 'error', 'info'];\n  // types.forEach((type: string): void => {\n  //   if (!(type in _globalThis.console)) return;\n  //   replaceOld(_globalThis.console, type, (originalConsole: () => any): Function => {\n  //     return function (...args: any[]): void {\n  //       if (originalConsole) {\n  //         triggerModuleHandler(EVENTTYPES.CONSOLE, { args, level: type });\n  //         originalConsole.apply(_globalThis.console, args);\n  //       }\n  //     };\n  //   });\n  // });\n};\n// error\nexport const replaceListenError = (): void => {\n  on(\n    _globalThis,\n    'error',\n    function (e: Error) {\n      triggerModuleHandler(EVENTTYPES.ERROR, e);\n    },\n    true,\n  );\n};\n// hashChange\nexport const replaceHashChange = (): void => {\n  if (_globalThis.hasOwnProperty('onpopstate')) return;\n  on(\n    _globalThis,\n    EVENTTYPES.HASHCHANGE,\n    function (ev: HashChangeEvent) {\n      triggerModuleHandler(EVENTTYPES.HASHCHANGE, ev);\n    },\n    false,\n  );\n};\n// history\nlet lastHref: string;\nlastHref = getLocationHref();\nexport const replaceHistory = (): void => {\n  // 重写 onpopstate事件 ,pushState ,replaceState方法\n  const historyReplaceFn = (originPopstate: VoidFn) => {\n    return function (this: WindowEventHandlers, ...args: any[]): void {\n      const to = getLocationHref();\n      const from = lastHref;\n      lastHref = to;\n      triggerModuleHandler(EVENTTYPES.HISTORY, {\n        to,\n        from,\n      });\n      originPopstate && originPopstate.apply(this, args);\n    };\n  };\n  replaceOld(_globalThis, 'popstate', historyReplaceFn);\n  replaceOld(_globalThis.history, 'pushState', historyReplaceFn);\n  replaceOld(_globalThis.history, 'replaceState', historyReplaceFn);\n  on(\n    _globalThis,\n    'click',\n    function (ev: Event) {\n      const dom: any = ev.target;\n      if (dom.tagName.toUpperCase() === 'A' && dom.getAttribute('href')) {\n        ev.preventDefault();\n        const to = dom.getAttribute('href');\n        triggerModuleHandler(EVENTTYPES.HISTORY, {\n          to: to,\n          from: lastHref,\n        });\n        lastHref = to;\n      }\n    },\n    false,\n  );\n};\n// dom\nexport const replaceDom = (): void => {\n  if (!('document' in _globalThis)) return;\n  on(\n    _globalThis.document,\n    'click',\n    function (ev: Event) {\n      throttleTriggerModuleHandler(EVENTTYPES.DOM, ev);\n    },\n    false,\n  );\n  // 不需要事件监听的重写\n  // const proto = EventTarget && EventTarget.prototype;\n  // if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) return;\n  // replaceOld(proto, 'addEventListener', (originalProto: VoidFn): Function => {\n  //   return function (eventName: string, fn: EventListenerOrEventListenerObject, opitons?: boolean | AddEventListenerOptions) {\n  //     const wrapperListener = (...args) => {\n  //       console.log(this, '------ttt');\n  //       // triggerModuleHandler(EVENTTYPES.DOM, this);\n  //       (fn as Function).apply(this, args);\n  //       try {\n  //       } catch (err) {\n  //         console.log(err);\n  //       }\n  //     };\n  //     originalProto.call(this, eventName, wrapperListener, opitons);\n  //   };\n  // });\n};\n// unhandlerejection\nexport const replaceUnhandlerejection = (): void => {\n  on(_globalThis, EVENTTYPES.UNHANDLEDREJECTION, function (ev: PromiseRejectionEvent) {\n    triggerModuleHandler(EVENTTYPES.UNHANDLEDREJECTION, ev);\n  });\n};\nexport const replaceVue = () => {};\n","import { EVENTTYPES, MonitorHttp } from '@/common';\nimport { getSilent, setSilent, throttle } from 'utils';\n\nimport {\n  replaceXhr,\n  replaceFetch,\n  replaceConsole,\n  replaceListenError,\n  replaceHashChange,\n  replaceHistory,\n  replaceDom,\n  replaceUnhandlerejection,\n  replaceVue,\n} from './replaceModule';\nimport { _globalMonitor } from 'utils';\ninterface ModuleHandler {\n  cb: cbType;\n  type: EVENTTYPES;\n}\nexport type cbType = (data: any) => void;\ntype ModuleHandlersType = {\n  [key in EVENTTYPES]?: cbType[];\n};\nconst moduleHandlers: ModuleHandlersType = {};\n\nexport const triggerModuleHandler = (type: EVENTTYPES, data: any): void => {\n  if (!type || !moduleHandlers[type]) return;\n  moduleHandlers[type].forEach((cb: cbType) => {\n    try {\n      cb(data);\n    } catch (e: any) {\n      // todo sdk错误日志收集\n      console.log('发生错误', e);\n    }\n  });\n};\nexport const throttleTriggerModuleHandler = throttle(triggerModuleHandler, 600);\n\nexport const replace = (type: EVENTTYPES) => {\n  switch (type) {\n    case EVENTTYPES.XHR:\n      replaceXhr();\n      break;\n    case EVENTTYPES.FETCH:\n      replaceFetch();\n      break;\n    case EVENTTYPES.CONSOLE:\n      replaceConsole();\n      break;\n    case EVENTTYPES.ERROR:\n      replaceListenError();\n      break;\n    case EVENTTYPES.HASHCHANGE:\n      replaceHashChange();\n      break;\n    case EVENTTYPES.HISTORY:\n      replaceHistory();\n      break;\n    case EVENTTYPES.DOM:\n      replaceDom();\n      break;\n    case EVENTTYPES.UNHANDLEDREJECTION:\n      replaceUnhandlerejection();\n      break;\n    case EVENTTYPES.VUE:\n      replaceVue();\n      break;\n  }\n};\nexport const addModuleHandler = (handler: ModuleHandler) => {\n  const { cb, type } = handler;\n  if (getSilent(type)) return;\n  // setSilent(type,true)\n  moduleHandlers[type] = moduleHandlers[type] || [];\n  moduleHandlers[type].push(cb);\n  replace(type);\n};\n\nconsole.log(moduleHandlers);\n","import { ERRORTYPES, MonitorHttp, ERRORLEVEL } from '@/common';\nimport { httpTransform, transportData, resourceTransform } from 'core';\nimport { ReportDataType } from '@/types/transportData';\nimport { getLocationHref, getTimestamp, htmlPathAsInfo } from 'utils';\nexport interface ResourceErrorTarget {\n  src?: string;\n  href?: string;\n  localName?: string;\n}\nexport const handleEvents = {\n  handleHttp(data: MonitorHttp, timeout?: number) {\n    // 1 接口自身错误，跨域，超时等问题\n    // 2 todo接口没有问题就不上报？可以自定义接口超时时间，接口响应超过某个限定值就可以上报。(反应接口慢的问题)\n    const isError = data.status >= 400 || data.status === 0 || (timeout && data.elapsedTime >= timeout); //接口错误 （包含超时）\n    if (isError) {\n      //todo  接口错误上报\n      const result = httpTransform(data);\n      transportData.xhrPost(result);\n    }\n  },\n  handleError(errorEvent: ErrorEvent) {\n    const target = errorEvent.target as ResourceErrorTarget;\n    // 资源加载错误\n    if (target.localName) {\n      const result = resourceTransform(target);\n      return transportData.xhrPost(result);\n    }\n    // js code error\n    const { message, filename, lineno, colno, error } = errorEvent;\n    console.log(error);\n    const url = filename || getLocationHref();\n    let result: ReportDataType = {\n      type: ERRORTYPES.JAVASCRIPT_ERROR,\n      message,\n      pageUrl: url,\n      level: ERRORLEVEL.HIGH,\n      time: getTimestamp(),\n      stack: {\n        line: lineno,\n        col: colno,\n        url,\n      },\n    };\n    transportData.xhrPost(result);\n  },\n  handleUnhandlerejection(errorEvent: PromiseRejectionEvent) {\n    let result: ReportDataType = {\n      type: ERRORTYPES.PROMISE_ERROR,\n      message: JSON.stringify(errorEvent.reason),\n      pageUrl: getLocationHref(),\n      name: errorEvent.type,\n      time: getTimestamp(),\n      level: ERRORLEVEL.NORMAL,\n    };\n    transportData.xhrPost(result);\n  },\n  handleDom(event: PointerEvent) {\n    const { path }: any = event;\n    const data = htmlPathAsInfo(path);\n    console.log(data, '---');\n\n    let result = {\n      message: '埋点',\n      pageUrl: getLocationHref(),\n      time: getTimestamp(),\n      level: ERRORLEVEL.NORMAL,\n      stack: data,\n    };\n    transportData.xhrPost(result);\n  },\n  handleHashchange(event: HashChangeEvent) {\n    const { newURL, oldURL } = event;\n    console.log(newURL, oldURL);\n  },\n  handleHistory(data: { to: string; from: string }) {\n    console.log(data);\n  },\n  // handleConsole(data: any) {\n  //   console.log(data);\n  // },\n};\n","import { ReportDataType } from '@/types/transportData';\nimport { MonitorHttp, ERRORTYPES, ERRORLEVEL } from '@/common';\nimport { getLocationHref, getTimestamp } from 'utils';\nimport { ResourceErrorTarget } from 'core';\n\nexport function httpTransform(data: MonitorHttp): ReportDataType {\n  let description = data.responseText;\n  if (data.status === 0) {\n    description = data.elapsedTime <= 1000 ? '接口失败原因为:跨域' : '接口失败原因为:超时';\n  } else {\n    description = '接口上报原因：接口响应慢';\n  }\n  return {\n    type: ERRORTYPES.HTTPERROR,\n    pageUrl: getLocationHref(),\n    time: data.eTime,\n    elapsedTime: data.elapsedTime,\n    level: ERRORLEVEL.HIGH,\n    request: {\n      httpType: data.type,\n      method: data.method,\n      url: data.url,\n      data: data.reqData || '',\n    },\n    response: {\n      status: data.status,\n      statusText: data.statusText,\n      description,\n    },\n  };\n}\n\nconst resourceMap = {\n  img: '图片',\n  script: '脚本',\n};\nexport function resourceTransform(target: ResourceErrorTarget): ReportDataType {\n  return {\n    type: ERRORTYPES.RESOURCE_ERROR,\n    pageUrl: getLocationHref(),\n    message: '资源地址: ' + (target.src || target.href),\n    level: ERRORLEVEL.LOW,\n    time: getTimestamp(),\n    name: `${resourceMap[target.localName] || target.localName} failed to load`,\n  };\n}\n","import { Queue, splitObjToQuery } from 'utils';\nimport { MonitorHttp } from '@/common';\nimport { SERVER_URL } from '@/config';\nimport { ReportDataType, TransportDataType } from '@/types/transportData';\nimport { MonitorOptions } from '@/types/monitor';\nclass TransportData {\n  static img = new Image();\n  private queue: Queue;\n  private apiKey = '';\n  private beforeSend: unknown = null;\n  private configXhr: unknown = null;\n  constructor(private url: string) {\n    this.queue = new Queue();\n  }\n  imgPort(data: Record<string, unknown>): void {\n    TransportData.img.src = `${this.url}?${splitObjToQuery(data)}`;\n  }\n  xhrPost(data: ReportDataType): void {\n    const handler = (): void => {\n      if (typeof XMLHttpRequest === 'undefined') return;\n      // todo 在发送请求之前做些什么事情\n      if (typeof this.beforeSend === 'function') {\n        data = this.beforeSend(data);\n        if (!data) return;\n      }\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', this.url);\n      xhr.setRequestHeader('Content-Type', 'text/plain;charset=UTF-8');\n      // xhr.withCredentials = true;\n      if (typeof this.configXhr === 'function') {\n        this.configXhr(xhr);\n      }\n      // todo  对当前的xhr做配置\n      // const errorID  =createErrorID(data)\n      xhr.send(JSON.stringify(this.getTransportData(data)));\n      xhr.addEventListener('loadend', function () {\n        console.log(this, 111);\n      });\n      console.log(xhr);\n    };\n    this.queue.addFn(handler);\n  }\n  getTransportData(data: ReportDataType): TransportDataType {\n    return {\n      authInfo: {\n        apikey: this.apiKey,\n      },\n      data,\n    };\n  }\n  isSdkTransportUrl(url: string): boolean {\n    return url.includes(this.url);\n  }\n  bindOptions(options: MonitorOptions): void {\n    const { dsn, beforeSend, apikey, configXhr } = options;\n    this.apiKey = options.apikey;\n  }\n}\n\nconst transportData = new TransportData(SERVER_URL);\n\nexport { transportData };\n","export const SERVER_URL = 'http://localhost:3009/api/error/error.gif';\n","import { MonitorOptions } from '@/types/monitor';\nimport { setSilentHandler } from 'utils';\nimport { loadModule } from './module';\nimport { transportData } from 'core';\n\nclass Monitor {\n  private monitorOpts: MonitorOptions = {};\n  constructor(options: MonitorOptions = {}) {\n    this.monitorOpts = options;\n    this.init();\n  }\n  private init() {\n\n    if (this.monitorOpts.disabled) return;\n    this.bindOptions();\n    loadModule(this.monitorOpts.timeout);\n  }\n  private bindOptions() {\n    setSilentHandler(this.monitorOpts);\n    transportData.bindOptions(this.monitorOpts);\n  }\n}\n\nexport default Monitor;\n","import { addModuleHandler, handleEvents } from 'core';\nimport { EVENTTYPES } from '@/common';\n\nexport const loadModule = (timeout?: number): void => {\n  // xhr\n  addModuleHandler({\n    cb: (data: any): void => {\n      handleEvents.handleHttp(data, timeout);\n    },\n    type: EVENTTYPES.XHR,\n  });\n  // fetch\n  addModuleHandler({\n    cb: (data: any): void => {\n      handleEvents.handleHttp(data);\n    },\n    type: EVENTTYPES.FETCH,\n  });\n  // errors\n  addModuleHandler({\n    cb: (data: any) => {\n      handleEvents.handleError(data);\n    },\n    type: EVENTTYPES.ERROR,\n  });\n  // dom\n  addModuleHandler({\n    cb: (data: any) => {\n      handleEvents.handleDom(data);\n    },\n    type: EVENTTYPES.DOM,\n  });\n  // console\n  //   addModuleHandler({\n  //     cb: (data: any) => {\n  //       return;\n  //       //   handleEvents.handleConsole(data);\n  //     },\n  //     type: EVENTTYPES.CONSOLE,\n  //   });\n  // hashChange\n  addModuleHandler({\n    cb: (data: any) => {\n      handleEvents.handleHashchange(data);\n    },\n    type: EVENTTYPES.HASHCHANGE,\n  });\n  // history\n  addModuleHandler({\n    cb: (data: any) => {\n      handleEvents.handleHistory(data);\n    },\n    type: EVENTTYPES.HISTORY,\n  });\n  // unhandleRejection\n  addModuleHandler({\n    cb: (data: any) => {\n      handleEvents.handleUnhandlerejection(data);\n    },\n    type: EVENTTYPES.UNHANDLEDREJECTION,\n  });\n  // vue\n  addModuleHandler({\n    cb: (data: any) => {},\n    type: EVENTTYPES.VUE,\n  });\n};\n"],"names":["EVENTTYPES","ERRORLEVEL","HTTPTYPE","ERRORTYPES","_globalThis","globalThis","_silentFlag","__MONITOR__","silentFlag","setSilent","slientType","bool","replaceOld","source","name","replaceFn","wapper","getTimestamp","Date","now","on","target","eventName","handler","opitons","addEventListener","getLocationHref","document","location","href","Queue","constructor","this","stack","isFlushing","micro","Promise","resolve","addFn","push","then","flushStack","temp","slice","length","i","replaceXhr","originalXhrProto","XMLHttpRequest","prototype","originalOpen","args","url","str","monitor_xhr","method","toUpperCase","sTime","type","XHR","transportData","isSdkTransportUrl","isSdkUrl","apply","originalSend","reqData","eTime","status","statusText","responseText","elapsedTime","triggerModuleHandler","lastHref","replaceHistory","historyReplaceFn","originPopstate","to","from","HISTORY","history","ev","dom","tagName","getAttribute","preventDefault","moduleHandlers","data","forEach","cb","e","console","log","throttleTriggerModuleHandler","fn","warting","isFirst","isImmediate","exceDate","timer","_throttle","clearTimeout","delay","setTimeout","cancel","throttle","replace","FETCH","originalFetch","config","res","tempRes","clone","handlerData","text","catch","err","message","CONSOLE","ERROR","HASHCHANGE","hasOwnProperty","DOM","UNHANDLEDREJECTION","VUE","addModuleHandler","handleEvents","handleHttp","timeout","result","description","HTTPERROR","pageUrl","time","level","HIGH","request","httpType","response","httpTransform","xhrPost","handleError","errorEvent","localName","RESOURCE_ERROR","src","LOW","resourceMap","resourceTransform","filename","lineno","colno","error","JAVASCRIPT_ERROR","line","col","handleUnhandlerejection","PROMISE_ERROR","JSON","stringify","reason","NORMAL","handleDom","event","path","html","nodeName","baseURI","attributes","outerHTML","htmlPathAsInfo","handleHashchange","newURL","oldURL","handleHistory","img","script","TransportData","apiKey","beforeSend","configXhr","queue","imgPort","Object","entries","reduce","key","value","index","splitObjToQuery","xhr","open","setRequestHeader","send","getTransportData","authInfo","apikey","includes","bindOptions","options","Image","monitorOpts","init","disabled","silentXhr","silentFetch","silentConsole","silentDom","silentHistory","silentError","silentHashchange","silentUnhandledrejection","silentVue","setSilentHandler"],"mappings":"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"}